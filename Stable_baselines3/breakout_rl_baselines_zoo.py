# -*- coding: utf-8 -*-
"""Breakout rl-baselines-zoo.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18F2kA81YB5vXOxkRWXoFmIlcjsB6fUHk
"""

!apt-get install swig cmake ffmpeg freeglut3-dev xvfb

"""## Clone RL Baselines3 Zoo Repo"""

!git clone --recursive https://github.com/DLR-RM/rl-baselines3-zoo

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/rl-baselines3-zoo/

"""### Install pip dependencies"""

!pip install -r requirements.txt

!python train.py --algo dqn --env BreakoutNoFrameskip-v4 --n-timesteps 10000000 --hyperparams learning_rate:0.001 exploration_final_eps:0.05 --eval-freq 10000 --eval-episodes 10

"""### More Training
####continue training of the previous model
"""

!python train.py --algo dqn --env BreakoutNoFrameskip-v4 --n-timesteps 1000000 --hyperparams learning_rate:0.001 exploration_final_eps:0.05 -i logs/dqn/BreakoutNoFrameskip-v4_1/BreakoutNoFrameskip-v4.zip --save-freq 100000

"""#### Evaluate trained agent


Removing the `--folder logs/` to evaluate pretrained agent.
"""

!python enjoy.py --algo dqn --env BreakoutNoFrameskip-v4 --no-render --n-timesteps 5000 --folder logs/

"""### Record  a Video"""

# Set up display; otherwise rendering will fail
import os
os.system("Xvfb :1 -screen 0 1024x768x24 &")
os.environ['DISPLAY'] = ':1'

!python -m utils.record_video --algo dqn --env BreakoutNoFrameskip-v4 --exp-id 0 -f logs/ -n 50000

"""### Display the video"""

import base64
from pathlib import Path

from IPython import display as ipythondisplay

def show_videos(video_path='', prefix=''):
  """
  Taken from https://github.com/eleurent/highway-env

  :param video_path: (str) Path to the folder containing videos
  :param prefix: (str) Filter the video, showing only the only starting with this prefix
  """
  html = []
  for mp4 in Path(video_path).glob("{}*.mp4".format(prefix)):
      video_b64 = base64.b64encode(mp4.read_bytes())
      html.append('''<video alt="{}" autoplay 
                    loop controls style="height: 400px;">
                    <source src="data:video/mp4;base64,{}" type="video/mp4" />
                </video>'''.format(mp4, video_b64.decode('ascii')))
  ipythondisplay.display(ipythondisplay.HTML(data="<br>".join(html)))

show_videos(video_path='logs/videos/', prefix='dqn')